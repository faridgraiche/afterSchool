<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="farids-MBP" ignored="10" name="Surefire test" tests="9" failures="0" timestamp="2022-03-17T14:55:00 EDT" time="0.069" errors="0">
  <testcase name="@BeforeMethod setUp" time="0.03" classname="farid.com.CommonAPI">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at farid.com.CommonAPI.getDriver(CommonAPI.java:108)
at farid.com.CommonAPI.setUp(CommonAPI.java:93)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.001" classname="farid.com.CommonAPI">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at farid.com.CommonAPI.getDriver(CommonAPI.java:108)
at farid.com.CommonAPI.setUp(CommonAPI.java:93)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.002" classname="farid.com.CommonAPI">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at farid.com.CommonAPI.getDriver(CommonAPI.java:108)
at farid.com.CommonAPI.setUp(CommonAPI.java:93)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.001" classname="farid.com.CommonAPI">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at farid.com.CommonAPI.getDriver(CommonAPI.java:108)
at farid.com.CommonAPI.setUp(CommonAPI.java:93)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.001" classname="farid.com.CommonAPI">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at farid.com.CommonAPI.getDriver(CommonAPI.java:108)
at farid.com.CommonAPI.setUp(CommonAPI.java:93)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod setUp" time="0.001" classname="farid.com.CommonAPI">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: /Users/farid/eclipse-workspace/SecondAfterSchool/Amazon/../Generic/src/drivers/chromedriver 2.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at farid.com.CommonAPI.getDriver(CommonAPI.java:108)
at farid.com.CommonAPI.setUp(CommonAPI.java:93)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="farid.com.CommonAPI">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="searchComputer" time="0.0" classname="farid.com.search.TestSearchSingleItem">
    <skipped/>
  </testcase> <!-- searchComputer -->
  <testcase name="searchJavaBook" time="0.0" classname="farid.com.search.TestSearchSingleItem">
    <skipped/>
  </testcase> <!-- searchJavaBook -->
  <testcase name="searchSeleniumBook" time="0.001" classname="farid.com.search.TestSearchSingleItem">
    <skipped/>
  </testcase> <!-- searchSeleniumBook -->
  <testcase name="searchItems" time="0.0" classname="farid.com.search.TestSearchMultipleItems">
    <skipped/>
  </testcase> <!-- searchItems -->
  <testcase name="clickOnBabyWithSelect" time="0.0" classname="farid.com.menu.TestSelectMenuOption">
    <skipped/>
  </testcase> <!-- clickOnBabyWithSelect -->
  <testcase name="getDropdownListWithOutSelect" time="0.0" classname="farid.com.menu.TestSelectMenuOption">
    <skipped/>
  </testcase> <!-- getDropdownListWithOutSelect -->
  <testcase name="checkWatchList" time="0.0" classname="farid.com.menu.TestCheckWatchList">
    <skipped/>
  </testcase> <!-- checkWatchList -->
  <testcase name="addToCartAndCheckItem" time="0.0" classname="farid.com.purchase.TestPurchase">
    <skipped/>
  </testcase> <!-- addToCartAndCheckItem -->
  <testcase name="loginWithInvalidEmail" time="0.0" classname="farid.com.loginFeature.TestLogin">
    <skipped/>
  </testcase> <!-- loginWithInvalidEmail -->
  <testcase name="@AfterSuite generateReport" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase name="@BeforeSuite extentSetup" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase name="@BeforeSuite extentSetup" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase name="@AfterSuite generateReport" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase name="@BeforeSuite extentSetup" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase name="@AfterSuite generateReport" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase name="@BeforeSuite extentSetup" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase name="@AfterSuite generateReport" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase name="@AfterSuite generateReport" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase name="@BeforeSuite extentSetup" time="0.0" classname="farid.com.CommonAPI">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
</testsuite> <!-- Surefire test -->
